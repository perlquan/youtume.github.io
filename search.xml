<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[SQL优化技巧总结]]></title>
    <url>%2F2018%2F01%2FSQL%E4%BC%98%E5%8C%96%E6%8A%80%E5%B7%A7%E6%80%BB%E7%BB%93.html</url>
    <content type="text"><![CDATA[本文总结了在日常工作环境中（Hive等）的SQL使用和优化的技巧，不足之处请见谅。 WHERE子句中的连接顺序：Oracle采用自下而上的顺序解析WHERE子句,根据这个原理,表之间的连接必须写在其他WHERE条件之前, 那些可以过滤掉最大数量记录的条件必须写在WHERE子句的末尾。 SELECT子句中避免使用*:Select中每少提取一个字段，数据的提取速度就会有相应的提升。提升的速度还要看您舍弃的字段的大小来判断。COUNT()同理，建议换成COUNT(1);如果给定一个通配符，则返回表中所有的列，检索不需要的列通常会降低索引和应用程序的性能。Oracle在解析的过程中,会将’*’依次转换成所有的列名, 这个工作是通过查询数据字典完成的, 这意味着将耗费更多的时间。 去除表情符号：regexp_replace(km.name, &#39;([\000\\x{10000}-\\x{10ffff}\ud800-\udfff])&#39;, &#39;&#39;) 小写改成大写：SQL在解析的过程中关键字要全部转换为大写后再进行进一步的解析 小表JOIN大表：hive会将小表进行缓存。HIVE中在map端JOIN是将小表放入内存，在map端和大表逐一匹配。从而省去reduce。注：使用JOIN时候可以先在表内做好选择和过滤，这样减少形成最后大表的数量。 使用DISTINCT关键字：建议使用GROUP BY,因为无论检索字段是否是索引，GROUP BY 都比DISTINCT 快。(必须放在所有列名前面，不能部分使用DISTINCT) 排序: ORDER BY 要位于SELECT语句最后一条子句，并支持降序，例：ORDER BY prod_price DESC, prod_name ASC;先降序排序,升序排序 排名 123row_number() over ([partition col1] [order by col2])rank() over ([partition col1] [order by col2])dense_rank() over ([partition col1] [order by col2]) 它们都是根据col1字段分组，然后对col2字段进行排序，对排序后的每行生成一个行号，这个 行号从1开始递增 col1、col2都可以是多个字段，用‘,‘分隔 区别： 1）row_number：不管col2字段的值是否相等，行号一直递增，比如：有两条记录的值相等，但一 个是第一，一个是第二 2）rank：上下两条记录的col2相等时，记录的行号是一样的，但下一个col2值的行号递增N（N是 重复的次数），比如：有两条并列第一，下一个是第三，没有第二 3）dense_rank：上下两条记录的col2相等时，下一个col2值的行号递增1，比如：有两条并列第一，下一个是第二 聚合函数忽略NULL值：当聚合列值都是NULL值时，由于聚合函数忽略NULL值，因此，当计算聚合函数（max，min，avg和sum）的聚合值时，由于无值可以聚合，数据库引擎不能确定这些聚合函数的返回值，因此，数据库引擎返回NULL值。 聚合函数（max,min,sum,avg和count）忽略null值，但不代表聚合函数不返回null值：如果数据表为空表，或聚合列值都是null，那么max,min,sum,avg聚合函数返回null值，而count 聚合函数返回0。聚合函数的共性：Null values are ignored。 数据倾斜：表现：任务进度长时间维持在99%（或100%），查看任务监控页面，发现只有少量（1个或几个）reduce子任务未完成。因为其处理的数据量和其他reduce差异过大。 原因：map处理数据量的差异过大，导致数据不均匀的分配到各个reduce 解决方法(网上) 设置参数调节：hive.map.aggr=trueMap 端部分聚合，相当于Combinerhive.groupby.skewindata=true有数据倾斜的时候进行负载均衡，当选项设定为 true，生成的查询计划会有两个 MR Job。第一个 MR Job 中，Map 的输出结果集合会随机分布到 Reduce 中，每个 Reduce 做部分聚合操作，并输出结果，这样处理的结果是相同的 Group By Key 有可能被分发到不同的 Reduce 中，从而达到负载均衡的目的；第二个 MR Job 再根据预处理的数据结果按照 Group By Key 分布到 Reduce 中（这个过程可以保证相同的 Group By Key 被分布到同一个 Reduce 中），最后完成最终的聚合操作。 SQL语句调节： 如何Join：关于驱动表的选取，选用join key分布最均匀的表作为驱动表做好列裁剪和filter操作，以达到两表做join的时候，数据量相对变小的效果。 大小表Join：（小表定义：不大于1G的情况/1000条以下的记录条数称为小表，视实际情况而定-建议）使用join时小的维度表在前面(先进内存)，在map端完成reduce。 大表Join大表：把空值的key变成一个字符串加上随机数，把倾斜的数据分到不同的reduce上，由于null值关联不上，处理后并不影响最终结果。 count distinct大量相同特殊值count distinct时，将值为空的情况单独处理，如果是计算count distinct，可以不用处理，直接过滤，在最后结果中加1。如果还有其他计算，需要进行group by，可以先将值为空的记录单独处理，再和其他计算结果进行union。 group by维度过小：采用sum() group by的方式来替换count(distinct)完成计算。 特殊情况特殊处理：在业务逻辑优化效果的不大情况下，有些时候是可以将倾斜的数据单独拿出来处理。最后union回去。 HIVE动态分区设置(pt):SET hive.exec.dynamic.partition.mode=nonstrict;HIVE设置map/ruduce内存等参数：1234set mapreduce.map.memory.mb=4096;set mapreduce.reduce.memory.mb=4096;set mapreduce.map.cpu.vcores=4;set mapreduce.reduce.cpu.vcores=4; 一行转多行：lateral view用于和split、explode等UDTF一起使用的，能将一行数据拆分成多行数据(或者UDF，个人比较倾斜Python的UDF)；多行转一行 ：collect_set/collect_list返回去重的元素数组。 小文件的合并:大量的小文件导致文件数目过多，给HDFS带来压力，对hive处理的效率影响比较大，可以合并map和reduce产生的文件123hive.merge.mapfiles = true --是否和并 Map 输出文件，默认为 Truehive.merge.mapredfiles = false --是否合并 Reduce 输出文件，默认为 Falsehive.merge.size.per.task = 256*1000*1000 --合并文件的大小 注释：做项目中导数据时候要求hive中表文件存储为一个文件，还可以使用ORDER BY 1，这样只存在一个reduce，产生一个文件。 中间表使用：在做项目中经常会重复使用中间表，但是又不想建立一个物理表，这时候可以使用WITH table_name AS () SELECT ... FROM ...例子:123456WITH hhAS (SELECT ID FORM Dept WHERE name like '%苏州%') SELECT * FROM hh; 附：SQL执行优先级 参考书籍：《SQL必知必会》数据倾斜见博客]]></content>
      <categories>
        <category>数据分析基本工具</category>
      </categories>
      <tags>
        <tag>SQL优化</tag>
        <tag>SQL技巧</tag>
        <tag>Hive</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[excel使用技巧]]></title>
    <url>%2F2018%2F01%2Fexcel.html</url>
    <content type="text"><![CDATA[excel等是数据分析中的基本工具，是每一个数据相关从业者必备的技能之一，本文从此处出发，以excel函数等为入口，系统学习excel的相关技能，力求熟练并精通之，并在此处记录。 excel技巧 填充：3种方式：①拖拽填充柄 ② 双击填充柄 ③ 填充公式：选中目标单元格区域，按Ctrl确定；然后保证在全选情况下在第一个写入公式合键或者【开始-填充】下拉按钮-向下，进行填充。 分阶段填充，选中目标区域，定位/Ctrl+G组合键打开，定位空值确定；然后保证在全选情况下在第一个单元格中写入公式，然后Ctrl+Enter组合键就全部分阶段填充。 选中：excel中选中第一个单元格按住shift然后点最后一个单元格，即可全部选中当前目标区域。如果行数太多，可以使用Ctrl+Shift+向下加方向键，直接定位到列有值的最后一行，如果在按一下向下方向键则选择全部行。Ctrl+Shift+空格选中当前表中有连续值的目标区域。 引用格式： [工作簿名称]工作表名!单元格引用 文本和数字转换，数字转特定格式文本：TEXT(A1,”特定格式”)或者&amp;””或者CONCATENATE函数拼接字符；文本转数字：数据-分列 选数字等格式或者X1(乘1) ANSI编码：CHAR(10),&amp;CHAR(10)&amp;;如果要在单元格中显示出2行，可用如上拼接，然后点击开始-自动换行按钮，即可换行显示。 查找excel表中单元格字符，可以将该列复制到word中，查找Ctrl+H替换[!0-9]，剩下全部是数字，然后再copy至excel中。 常用函数 type函数：查看单元格value类型，1-数字，2-文本，4-逻辑值，16-错误值，64-数组常量；注意当单元格为空时候，type函数会将其认为是数值0处理，结果为1 大小写字母转换：小写—&gt;大写UPPER，大写-&gt;小写LOWER，首字母大写其余字母改为小写PROPER 截取字符函数：从左LEFT；从右RIGHT；从单元格任意位置截取字符串：MID(text,start_num,num_chars);这3个字符都是按字符数处理; 对指定小数位数舍入数值：FIXED(number，[decimals], [no_commas])，该函数默认是2位小数；即对小数位数直接舍去；而ROUND则是根据小数位数直接四舍五入得到最后的值。 查找字符FIND(find_test, within_text,[start_num]),返回从左到右方向第一次出现的位置；不存在则返回#VALUE；SEARCH函数语法类似，不区分大小写，允许使用通配符，但是FIND区分大小写，并不允许使用通配符； SUBSTITUTE(text,old_text,new_text,[instance_num])替换字符或字符串：第一个参数text是需要替换其中字符的文本或者单元格引用，第二个参数old_text是需要替代的文本；第三个参数new_text是用于替换old_text的文本，第四个参数可选，指定要替换第几次出现的旧字符串。REPLACE(old_text,start_num,num_chars,new_text)函数-将部分文本字符串替换为不同的文本字符串:例如REPLACE(B2,4,4,&quot;****&quot;) TEXT函数：格式化文本：TEXT(value, format_text);format_text格式化代码： 3个条件区段，并用半角分号(;)间隔;如下：[&gt;0];[&lt;0];[=0] 2个条件区段，并用半角分号(;)间隔;如下：[&gt;0];[&lt;0] 自定义条件:4区段：[条件1];[条件2];[不满足条件的其他部分];[文本];3区段：[条件1];[条件2];[不满足条件];=TEXT(B2,&quot;[&gt;85]良好;[&gt;75]合格;不合格&quot;)2区段：[条件];[不满足条件] 实例：=TEXT(TEXT(EDATE(TEXT(A$3,&quot;0!-00&quot;),ROW(A1)-1),&quot;emm&quot;),&quot;[&gt;&quot;&amp;A$6&amp;&quot;] ;0&quot;);EDATE计算出”2011-09”以后的指定月份的日期，然后根据ROW(A1)-1来生成来连续的区间的月份。 利用TEXT函数将日期转换成为中文格式的月份：=TEXT(A2,&quot;[DBnum1]m月&quot;) 格式有yyyymmdd TEXT格式化代码： 0代表原先值，!0代表0；WEEKDAY函数算出是周几,然后减5,周六/日则为1，2；否则负数和0强制为0，以下为实现函数公式:TEXT(WEEKDAY(DATE(2016,A3,20),2)-5,&quot;0;!0;!0&quot;) 逻辑判断：AND、OR与OR函数，例如=IF(AND(B2=&quot;一线&quot;, c2&gt;10), &quot;是&quot;,&quot;否&quot;)注意逻辑函数的写法 常用的IS函数： ISBLANK函数：是否空格 ISERROR函数：值为任意错误值 ISNA函数：值为#N/A错误值 ISNUMBER函数：值为数值 ISNONTEXT函数：值为不是文本的任一项 ISTECT函数：值为文本 ISEVEN函数：数字为偶数 ISODD函数：数字为奇数 转换和公约/倍数: 弧度和角度转换：a. 弧度转化为角度：DEGREES(angle) b. 角度转化为弧度：RADIANS(angle) 最大公约数：GCD(number1,[number2],..) 返回两个或多个整数的最大公约数、最小公倍数:LCM(number1,[number2],..) 返回两个或多个整数的最小公倍数： MOD 取余函数MOD(number,divisor) 取舍函数：CEILING函数：向上舍入；FLOOR函数：向下舍去；注意：这两个函数都是按照舍入基数的整数倍进行取舍；格式如下：significance为舍入基数 12CEILING(number,[significance])FLORR(number,[significance]) 判断是否为闰年：转换成日期的年份，与字符串”-2-29”连接，生产”2014-2-29”样式的字符串，如果该日期不存在，则将会按文本进行处理。字符串前加上负号，如果字符串是日期，则返回一个负数，否则返回错误值”#CALUE!”。在用COUNT判断是否为数字，如果是则为闰年，否则平年。 1IF(COUNT(-(YEAR(A2)&amp;"-2-29")),"闰年","平年") 日期函数： 计算指定月份的日期：开始日期之后几个月的日期EDATE(start_date, months) EOMONTH 函数返回指定月数之前或者之后的最后一天的日期。DAY返回某个日期在一个月的天数。 例子：计算本月总天数=DAY(EOMONTH(TODAY(),0)) DATEIF函数：计算两个日期之间的天数、月数或者年数 12DATEDIF(start_date, end_date, unit)#unit：Y-年，M-月，D-天数，MD日期中的天数差-忽略年月，YM日期中的月数差-忽略日年，YD日期中的天数差，忽略年 DATESTRING函数：返回指定日期的中文短日期 星期相关函数：WEEKDAY函数返回某个日期的一周中的第几天。 WEEKDAY(serial_number,[return_type]):return_type: 1-默认/数字1(星期日)~7(星期六); 2-数字0(一)~7(日) TEXT函数第二参数： 1234= TEXT(B1, "aaaa") #返回中文如"星期六"= TEXT(B1, "aaa") #返回中文星期简写如"六"= TEXT(B1, "dddd") #返回英文"Saturday"= TEXT(B1, "ddd") #返回英文"Sat" WEEKNUM函数：返回指定日期属于全年的第几周 WEEKNUM(serial_number, [return_type]) #return_type默认为2 使用数组公式：判断日期所在月份有几个星期日数组公式：不用填入{};F2进入编辑，编辑好后，再使用&lt;Ctrl+Shift+Enter&gt;进行数组公式计算。a) 首先提取出年月，使用&amp;拼接出{2015-2-1,2015-2-2...,2015-2-31}数组。b) 使用MOD函数除以7，周日的情况下为1。如果对于2015-2-30等不存在的日期则会返回错误值。c) 最后=1则周日情况下返回TRUE，否则(包括不等于1和错误值)则为0或者错误值。0除以TRUE为0，其他返回错误值#DIV/0！或者#VALUE！。d) 最后COUNT函数统计结果。 公式如下：=COUNT(0/(MOD(TEXT(A2,&quot;e-m&quot;)&amp;-ROW($1:$31),7)=1)) LOOKUP函数：查询列表中小与或者等于目标值的最大值匹配，然后在第三参数中相同位置的值 123LOOKUP(lookup_value,lookup_vector,[result_vector])#lookup_vector查询范围，result_vector第三参数中对应的位置的值LOOKUP(lookup_value,array) 返回A列最后一个非空单元格内容 123=LOOKUP(1,0/(A:A&lt;&gt;""),A:A)#本写法就构建一个由0和错误值#DIV/!组成的数组，再用比0大的1作为查找值，即可查找结果区域中最后一个满足条件的记录。#经典用法：=LOOKUP(1,0/(条件),目标区域或数组) INDIRECT引用函数： INDIRECT(ref_text,[a1]) 注: ref_text可以是文本，也可以是不同区域，例如INDIRECT({&quot;C1:C10&quot;,&quot;F2:F10&quot;}) 返回指定单元格/区域的行号ROW() 和列号COLUMN() 基本查找函数VLOOKUP：查询值要求必须位于查询区域中的首列 1234VLOOKUP(lookup_value,table_array,col_index_num,[rank_lookup])# 第一参数查找值，第二参数查找区域# 第三参数指定返回查询区域中的第几列值，超过查询列的总列数，将返回错误值#REF，小于1返回错误值#VALUE# 第四参数，0或FASLE为精确匹配方式，支持无序查找；1或者TRUE或省略，则使用的近似匹配方式，同时要求查询区域的首列按升序排序 VLOOKUP一些技巧： a) 逆向查询，通过CHOOSE函数绕开查询值位于查询区域的首列：``=VLOOKUP(F5,CHOOSE({1,2},D2:D10,B2:B10),2,0)`` CHOOSE函数使用常量数组{1,2}将查询值所在的D2:D10和返回值B2：B10整合成一个新的两列多行的内存数组 CHOSSE可以根据指定数字序号返回与其对应的数据值结果 b) 使用数组查询多个内容：选中结果区域``=VLOOKUP(G2,A:E,{3,5},)}`` 然后``&lt;Ctrl+Shift+Enter&gt;`` MATCH函数：在单元格区域中搜索指定项，返回该项在单元格区域中的相对位置MATCH(lookup_value,lookup_array,[match_type])match_type第三参数，0、1或者省略、-1分别代表精确匹配或者升序查找，降序查找模型 COUNT函数：COUNT(value1,[..value2]..用于计算包含数字的单元格以及参数列表中数字的个数COUNT实例-计算考核得分大于等于3的达标率 1&#123;=TEXT(COUNT(0/(C2:C11&gt;=3))/COUNT(C2:C11),"0.00%")&#125; 计算范围中不为空的单元格个数COUNTNTA(value1,[value2],..)计算空白单元格个数COUNTBLANK(range)判断某一年是否是闰年和平年 IF(COUNT(-(YEAR(A2)&amp;&quot;-2-29&quot;)),&quot;闰年&quot;,&quot;平年&quot;) COUNTIF函数：统计满足条件的单元格的数量COUNTIF(range,criteria), criteria可以使用通配符？-任意单个字符，*任何字符；如果要查找问号或星号，则在字符前输入波浪符号”~”,如：~？例子:检查重复身份证号码 12=IF(COUNTIF(B$2:B$11,B2&amp;"*")&gt;1,"是","")#excel的数字精度为15位，而身份证位18位，后3位视为0，所以COUNTIF函数的cirteria部分使用B2&amp;"",转化为文本格式。 频数统计函数FREQUENCY：统计数值在某个区域内的出现平吕，返回一个垂直数组 123FREQUENCY(data_array,bins_array)#data_array一组数值或者数值引用#bins_array间隔数组，可以无序，统计是按照间隔点的数值升序排列 众数MODE函数均值函数AVERAGE函数数组中对应元素相乘SUMPRODUCT函数：SUMPRODUCT(array1,[array2],[array3],...)求和函数SUM，同理也有SUMIF函数 快捷键 Ctrl+1打开单元格格式 Ctrl+L /Ctrl+T创建表格，这里指套用格式。 Alt+= 自动求和 Ctrl+`(在Tab键之上)组合键可以直接显示公式和普通模式的切换 使用名称：公式-&gt;名称管理器 或者 Ctrl+F3 2018年2月22日完 《Excel 函数与公式应用大全》]]></content>
      <categories>
        <category>数据分析基本工具</category>
      </categories>
      <tags>
        <tag>excel</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[金融模型-评分卡（一）]]></title>
    <url>%2F2018%2F01%2F%E9%87%91%E8%9E%8D%E6%A8%A1%E5%9E%8B-%E8%AF%84%E5%88%86%E5%8D%A1%EF%BC%88%E4%B8%80%EF%BC%89.html</url>
    <content type="text"><![CDATA[一. 数据描述 每个候选预测变量的统计特性和分布 1） 矩，如均值、众数和标准差 2） 变化率的基本统计指标 3） 均值，分位数：如第一和第三个四分位数：变量中某值的频率，并计算累计频率 4） 极端值，最大值和最小值；范围 如何判定极端值：根据差异；① 正常取值范围② 建立具有特定函数形式的模型，并用数据拟合该模型，严重偏离并视为极端值③ 使用聚类算法分成很多较小的子集，即成簇；只包含最小数量的观测值的簇被认定为极端值④ 依靠决策树发现包含少量观测值的持续节点 处理：① 大多数情况极端值值或被删除或被重置为总体中的经典值&emsp;② 极端值的数量特别大时候进行分群(segments) 变量间是否存在关联性或相关性 1）建模的变量之间不能有较强的相关性，特别是logistic回归方法，最好使用因子分析和主成分分析进行降维找出最适合的变量建模。 2）相关性：皮尔森相关系数、斯皮尔曼相关系数(取值的等级：顺序) 皮尔森相关系数反应两个变量相似程度，变量的标准差不能为0，数据服从正态分布，数据至少在逻辑范围内是等距的。（有线性相关的概念） 斯皮尔曼相关系数是无参数（与分布无关）的检验方法，度量变量之间的联系的强弱。 变量中的缺失值和极端值，并评估其影响 金融中的正常和违约的分布情况 变量分段后统计违约和正常的频率 二. 建模方法-逻辑回归logistic构建logistic回归模型:h_θ(x)= \frac{1}{1+e^{(-β^Tx)}}其中， y= \frac{1}{1+e^{(-x)}}被称为sigmoid函数。sigmoid的函数图形如下： 模型拟合统计量评估模型中所有自变量对模型的贡献：（似然函数值） -2ln(L_1)= -2[y_iln(π_i) + (1-y_i)ln(1-π_i)]同时，为惩罚包含大量自变量的模型，制定了两个标准-赤池信息准则(AIC)和贝叶斯信息尊则(BIC)/又称舒尔茨准则(SC)：1) AIC: AIC = -2ln(L1) + 2r注：r是对模型复杂性惩罚机制，表现为模型参数数量r的形式，r是样本规模对数的比例2) SC/BIC： SC = -2ln(L1) + rln(n)粗分类和WOE1) 名义变量的WOE证据权重(Weight of Evidence,WOE)转换可以将logistic回归模型转变为标准的评分卡格式。其实，WOE是对原始变量的一种编码形式，主要是对变量进行分组（又称为离散化、分箱等）处理，计算WOE值。对于一个名义(类别)变量的类别i，或连续变量的某个段，WOE定义为 WOE_i = ln[\frac{Bad\ Distribution_i}{Good\ Distribution_i}]同时正常和违约的分布分别定义为： Good Distibution_i = \frac{Number\ of\ Good_i}{Total\ Number\ of\ Good} Bad Distibution_i = \frac{Number\ of\ Bad_i}{Total\ Number\ of\ Bad}最终，使用n代表数量，0代表违约，1代表正常，.代表全部；即类别$x_i$的WOE可以表示为： WOE(x_i) = ln\left[ \frac{n_{i0}/n_{.0}}{n_{i1}/n_{.1}} \right]从如上公式可以发现WOE就是第i类中违约与正常的比率与整个样本中违约与正常比率的比值的对数，其目的是衡量第i类对违约与正常的比率的影响程度，即第i类（每一组中）自变量对目标变量的影响。 注意：该类别中的违约和正常的比值和全部样本中的比值的比值，由于外边有对数函数（ln），因此就是在该类别中的违约和正常的比值，和全部样本的差异（ln：里除外减，减去）；这种差异越大，这个类别/分组的样本的正确区分的可能性就越大。 因此，将名义变量x的WOE重新表述为: WOE(x) = \delta_1WOE_1+ \delta_2WOE_2 + ... + \delta_rWOE_r其中，$\delta_1 … \delta_r$是二元虚拟变量，即对于所有的$j=1,….,r$，如果x的取值为第j类（$x_j$），则$x_j=1$；否则，$x_j = 0$。因此，针对名义变量，用一个变量的WOE代表该变量的各个类别，得到唯一的模型参数WOE(x);构建模型的变量可以视情况用其WOE值代替。2) 连续变量的WOE将数值分段，得到新的分段数据用于WOE计算。使用方法有决策树算法等。 信息值 Information Value(IV)IV衡量一个变量的信息量（和信息熵相似，但趋势未必一致），其决定自变量对目标变量的影响程度。因此IV可用于自变量筛选,IV值越大，改变了对模型的目标变量贡献越大，越应该被选入构建模型的变量列表中。 IV_i = (Bad Distibution_i - Good Distibution_i) * ln(\frac{Bad Distibution_i}{Good Distibution_i})IV = \sum_{k=0}^nIV_iIV有如下特点： 1. 对于某个变量的分组，违约/正常的比率与整体的样本的违约/正常的比率相差越大，IV越高，否则IV越小 2. 极端情况，IV=0，即分组下和整体的样本情况下违约/正常的比率相等。 2. IV的取值范围为：[0,+∞) 变量选择的方法现有的方法：使用所有变量、正向选择:添加最优变量、逆向选择：使用所有变量对模型拟合，逐步移除最差的变量、 逐步选择：正向+逆向的结合，正向增加最有的变量，逆向选择移出最差的变量。当前常用的做法。 模型评估评估方法：混合矩阵，ROC曲线，灵敏度： Sensitivity = \frac{TP}{TP + FN}特殊性： Specificity = \frac{TN}{TN + FP}三. 评分卡刻度和实施标准评分卡格式基本上都是每个变量遵循一系列IF-THEN法则。总分是评分卡所有变量的贡献之和。违约的概率是p，那正常的概率为1-p，因此， Odds = \frac{p}{1-p} p = \frac{Odds}{1 + Odds}评分卡的分值表示为： Score = A - Blog(Odds)其中，A和B为常数，违约概率越低，得分越高。 log(Odds) = \beta_0 + \beta_1x_1 + \beta_2x_2 + ... + \beta_px_p其中，用于建模参数拟合模型可以得到模型参数$\beta_0$(截距),$\beta_1,\beta_2, …, \beta_p$假设 在某个特定的比率$\theta_0$设定特定的预期分值$P_0$ 制定$\theta_0$比率减小一半时翻番的分数值(PDO)P_0 = A - Blog(\theta_0)P_0 + PDO = A - Blog(\frac{\theta_0}{2})解出：B = \frac{PDO}{log(2)}A = P_0 + Blog(\theta_0)此外，设置临界值水平：阈值 四. 其他 检测报告：评估和监测评分卡表现的情况。 拒绝演绎：对于不符合条件的直接拒绝，并给出具体原因。 参考资料： 信用卡风险评分卡研究基于SAS的开发与实施 Mamdouh著]]></content>
      <categories>
        <category>金融</category>
        <category>信用卡评分</category>
      </categories>
      <tags>
        <tag>逻辑回归</tag>
        <tag>logistic</tag>
        <tag>评分卡</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2018计划]]></title>
    <url>%2F2018%2F01%2F2018%E8%AE%A1%E5%88%92.html</url>
    <content type="text"><![CDATA[2018计划1.分析报告：a 爬虫：数据获取,大众点评.美团/头条数据 excel ppt精通使用，软实力excel做熟练的数据分析。 具有做一个完整的分析报告的能力，从数据的角度诠释一个行业。运营一个博客公众号之类，维持周更，行业内具有一定的影响力。&emsp;&emsp;&emsp; 2.机器学习 自然语言处理(NLP) b 以tensflow为代表的深度学习 常用的算法：SVM 集成模型(Ensemble Models)等 信贷模型：信用卡模型等 b ++MOOC课程++：至少2门 神经网络和深度学习 机器学习技法-国立台湾大学 机器学习-李弘毅2017Fall ==理论推导==，==编程实现==，实践很重要 3.其他事宜 以前买的书看完-ML/金融/心理学/中医 少说多做，慎言慎行，学会拒绝，坚守本心。 培养摄影爱好，看不一样的世界。 金融/经济/理财/心理学方面的知识截至时间 a:一季度3月 b:二季度6月 c:3季度9月 d：4季度12月 大写提前一个月 4.书籍： 待看书籍 《统计自然语言处理基础》 2018-01-29 注：略读 《PYTHON自然语言处理中文翻译/NLTK》 《模式识别与机器学习》 《深度学习》 《信用风险评分卡研究》 2018-01-09 《流畅的python2015》 2018-02-01 略读 流畅的python略读了前7章，该书适合作为工具书，以后有需求可以对某一个块知识点进行研读；涉及对象、迭代器、多线程、设计模式等 《Spark》等/ 《Java编程基础》第10版上 《hands-On Machine Learning with Scikit-learn &amp; TensorFlow》 《推荐系统 技术、评估及高效算法》 2018-03-14 看了前6章，略读，看不懂 excel函数与公式应用大全/VBA “错误”的行为/ 国富论上 下 摄影书籍提高审美 2017回顾 顺利毕业, 工作，对业务数据有更深入的理解。 阅读完书籍：看书： ML：《机器学习周志华，统计学习方法李航，数据挖掘：概念与技术，Effective Python，tensflow谷歌，excel2013透视表，精通Python网络爬虫，用Python写网络爬虫，利用Python进行数据分析》 F:《生活中的投资学，基金》 S:《抗得住世界就是你的, 浮生六记》 MOOC: ML-NG 信贷模型小白 成为摄影小白2017总结：工作效率不高，很多想做的事情没有做下去，实践并不多，执行不彻底。 纪实 2018Q1：涉及跨年，年前书差不多了，excel和爬虫要在这个Q1解决，然后一门MOOC（网易云课堂）。记录时间：2018-02-01 21点]]></content>
      <categories>
        <category>规划</category>
      </categories>
      <tags>
        <tag>计划</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[博客第一篇]]></title>
    <url>%2F2018%2F01%2Ffisrtblog.html</url>
    <content type="text"><![CDATA[开篇&emsp;2018-01-01开通博客，希望新年新气象！&emsp;同时也希望自己不断努力，不要放弃，实现自己价值。]]></content>
  </entry>
</search>
